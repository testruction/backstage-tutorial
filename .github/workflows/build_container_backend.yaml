name: Build and push Backend Docker images
on:
  # release:
  #   types: [published, prereleased]
  push:
    # branches:
    #   - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        component:
          - all-in-one
          - backend

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        run: echo "PACKAGE_JSON=$(jq -c . < package.json)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PACKAGES_TOKEN  }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/backstage/${{ matrix.component }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/backstage/${{ matrix.component }}:cache
          context: './'
          file: ./containers/${{ matrix.component }}/Dockerfile
          push: true
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/backstage/${{ matrix.component }}:latest
            ghcr.io/${{ github.repository_owner }}/backstage/${{ matrix.component }}:${{ fromJson(env.PACKAGE_JSON).version }}
          labels: |
            org.opencontainers.image.description=Docker image generated from the latest Backstage release; this contains what you would get out of the box by running npx @backstage/create-app and building a Docker image from the generated source. This is meant to ease the process of evaluating Backstage for the first time, but also has the severe limitation that there is no way to install additional plugins relevant to your infrastructure.
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ fromJson(env.PACKAGE_JSON).version }}