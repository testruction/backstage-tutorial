---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backstage
subjects:
  - namespace: backstage
    kind: ServiceAccount
    name: backstage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:aggregate-to-view
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backstage
  namespace: backstage
---
apiVersion: v1
kind: Secret
metadata:
  name: backstage-secrets
  namespace: backstage
type: Opaque
data:
  GITHUB_TOKEN: VG9rZW5Ub2tlblRva2VuVG9rZW5NYWxrb3ZpY2hUb2tlbg==  # Change me
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-env
  namespace: backstage
data:
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"
  KUBERNETES_URL: https://kubernetes.default.svc.cluster.local:443
  PROMETHEUS_URL: http://prometheus-operated.monitoring.svc.cluster.local:9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      serviceAccountName: backstage
      initContainers:
        - name: wait-for-db
          image: public.ecr.aws/docker/library/busybox:1.36
          envFrom:
            - configMapRef:
                name: backstage-env
          command:
            - sh
            - -c
            - until true; do nc -vz ${POSTGRES_HOST} ${POSTGRES_PORT}; echo Waiting for database; sleep 1s; done
      containers:
        - name: backstage
          image: backstage:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7007
          envFrom:
            - configMapRef:
                name: backstage-env
            - secretRef:
                name: postgres-secrets
            - secretRef:
                name: backstage-secrets
          resources: {}
          # Uncomment if health checks are enabled in your app:
          # https://backstage.io/docs/plugins/observability#health-checks
          readinessProbe:
            httpGet:
              port: 7007
              path: /healthcheck
          livenessProbe:
            httpGet:
              port: 7007
              path: /healthcheck
---
apiVersion: v1
kind: Service
metadata:
  name: backstage
  namespace: backstage
  labels:
    app: backstage
    component: app
spec:
  selector:
    app: backstage
  type: LoadBalancer
  ports:
    - name: http
      port: 8008
      targetPort: http
